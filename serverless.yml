service: fws
provider:
  name: aws
  stackName: ${env:FWS_ENV_NAME}${self:service}
  apiName: ${env:FWS_ENV_NAME}${self:service}-rest-api
  runtime: nodejs8.10
  role: ${env:FWS_LAMBDA_ROLE}
  stage: ${env:FWS_ENV_NAME}
  region: ${env:FWS_REGION}
  profile: ${env:FWS_DEV_PROFILE}
  deploymentBucket:
    name: ${env:FWS_BUCKET}
  environment:
    stage: ${env:FWS_ENV_NAME}
    FWS_DB_CONNECTION: ${env:FWS_DB_CONNECTION}
  vpc:
    securityGroupIds:
      - ${env:FWS_VPN_SEC_GRP}
    subnetIds:
      - ${env:FWS_SUB_1}
      - ${env:FWS_SUB_2}
  apiGateway:
    restApiId: ${env:FWS_API_ID}
    restApiRootResourceId: ${env:FWS_ROOT_ID}
package:
  exclude:
    - test
functions:
  processMessage:
    name: ${env:FWS_ENV_NAME}${self:service}-processMessage
    handler: lib/functions/process-message.handler
    events:
      - http:
          method: post
          path: message
          private: false
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              text/html: '{ "bodyXml": $input.json("$")}'
              application/json: ''
              application/x-www-form-urlencoded: ''
  activateTargetArea:
    name: ${env:FWS_ENV_NAME}${self:service}-activateTargetArea
    handler: lib/functions/activate-target-area.handler
    events:
      - http:
          method: post
          path: activate-target-area
          private: false
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              text/html: '{ "bodyXml": $input.json("$")}'
              application/json: ''
              application/x-www-form-urlencoded: ''
  deactivateTargetArea:
    name: ${env:FWS_ENV_NAME}${self:service}-deactivateTargetArea
    handler: lib/functions/deactivate-target-area.handler
    events:
      - http: 
          method: post
          path: deactivate-target-area
          private: false
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              text/html: '{ "bodyXml": $input.json("$")}'
              application/json: ''
              application/x-www-form-urlencoded: ''
  getAllMessages:
    name: ${env:FWS_ENV_NAME}${self:service}-getAllMessages
    handler: lib/functions/get-all-messages.handler
    events:
      - http:
          method: get
          path: fwis.xml
          private: false
          authorizer: ${env:FWS_ENV_NAME}${self:service}-authorizer
      - http:
          method: get
          path: fwis.json
          private: false
  authorizer:
    name: ${env:FWS_ENV_NAME}${self:service}-authorizer
    handler: lib/functions/authorizer.handler

